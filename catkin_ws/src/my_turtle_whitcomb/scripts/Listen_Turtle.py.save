#!/usr/bin/env python
import rospy
from std_msgs.msg import String
from geometry_msgs.msg import Twist
from ../msg import Velocity


def callback(data):
    rospy.loginfo(rospy.get_caller_id() + "I heard %s", msg.linear.x)
    
def Listen_Turtle():

    # In ROS, nodes are uniquely named. If two nodes with the same
    # node are launched, the previous one is kicked off. The
    # anonymous=True flag means that rospy will choose a unique
    # name for our 'listener' node so that multiple listeners can
    # run simultaneously.
    global msg
    msg = Twist()
    rospy.init_node('Listen_Turtle', anonymous=True)

    rospy.Subscriber("/cmd_vel_mux/input/teleop", Twist, callback)
    pub = rospy.Publisher('sdfsdff', Velocity, queue_size = 10)
    Vel_msg = Velocity()
    Vel_msg.x = 1
    Vel_msg.y = 2	
    n():
	rospy.loginfo(Vel_msg)
	pub.publish(Vel_msg)
	rate.sleep()

    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()

if __name__ == '__main__':
    Listen_Turtle()
